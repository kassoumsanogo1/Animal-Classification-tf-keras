import os
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
#from tensorflow.keras.preprocessing import image

# Charger le modèle
model = tf.keras.models.load_model("cats_dogs_model.h5")  # ou "cats_dogs_model"

# Dossier contenant les images à tester
#test_folder = "test_dataset"

test_folder = "cats_and_dogs_filtered/validation/cats"
img_size = 150

# Parcourir les images et les afficher
fig, axes = plt.subplots(3, 3, figsize=(10, 10))  # Grille 3x3
axes = axes.flatten()

for i, img_name in enumerate(os.listdir(test_folder)[:9]):  # Limité à 9 images
    img_path = os.path.join(test_folder, img_name)
    
    if img_name.endswith((".jpg", ".jpeg", ".png")):
        img = tf.keras.preprocessing.image.load_img(img_path, target_size=(img_size, img_size))
        img_array = tf.keras.preprocessing.image.img_to_array(img)
        img_array = np.expand_dims(img_array, axis=0)
        img_array /= 255.0
        
        # Prédiction
        prediction = model.predict(img_array)
        label = "Chien" if prediction[0][0] > 0.5 else "Chat"
        
        # Affichage
        axes[i].imshow(img)
        axes[i].set_title(f"{label}\nProbabilité: {prediction[0][0]:.2f}")
        axes[i].axis("off")

plt.tight_layout()
plt.show()
